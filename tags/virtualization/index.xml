<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>virtualization on Espen Braastad</title>
    <link>/tags/virtualization/</link>
    <description>Recent content in virtualization on Espen Braastad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Sep 2012 16:58:32 +0100</lastBuildDate>
    <atom:link href="/tags/virtualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KVM/Xen and libvirt: currentMemory, memory and ballooning. Where did my memory go?</title>
      <link>/posts/memory-ballooning/</link>
      <pubDate>Mon, 24 Sep 2012 16:58:32 +0100</pubDate>
      <guid>/posts/memory-ballooning/</guid>
      <description>KVM and Xen provide a method to change the amount of memory in use by guests at runtime. The method is called memory ballooning [1, 2], and it must be supported by the guest operating system to work.
In libvirt, memory allocation (and hence the ballooning capability) for a guest can be configured using the memory, currentMemory and memballoon tags:
&amp;lt;domain type=&amp;#39;kvm&amp;#39;&amp;gt; [...] &amp;lt;memory unit=&amp;#39;KiB&amp;#39;&amp;gt;16777216&amp;lt;/memory&amp;gt; &amp;lt;currentMemory unit=&amp;#39;KiB&amp;#39;&amp;gt;1048576&amp;lt;/currentMemory&amp;gt; [...] &amp;lt;devices&amp;gt; &amp;lt;memballoon model=&amp;#39;virtio&amp;#39;/&amp;gt; &amp;lt;/devices&amp;gt; &amp;lt;/domain&amp;gt; The guest can never use more memory than specified in the memory tag and it is the amount of memory the guest will use at boot time.</description>
    </item>
    <item>
      <title>KVM with iPXE in RHEL6</title>
      <link>/posts/kvm-with-ipxe-in-rhel6/</link>
      <pubDate>Wed, 02 Nov 2011 22:29:50 +0100</pubDate>
      <guid>/posts/kvm-with-ipxe-in-rhel6/</guid>
      <description>A while ago I discovered the amazing iPXE project. It is a complete PXE implementation with lots of nifty features, based on the gPXE project. Redhat ships the gPXE firmware for qemu and KVM, and you might want to use iPXE instead as the iPXE project currently seems to be more active. The major features (copied from ipxe.org):
boot from a web server via HTTP boot from an iSCSI SAN boot from a Fibre Channel SAN via FCoE boot from an AoE SAN boot from a wireless network boot from a wide-area network boot from an Infiniband network control the boot process with a script First, download the source code:</description>
    </item>
  </channel>
</rss>
